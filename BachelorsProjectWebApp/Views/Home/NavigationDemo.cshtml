@{
	ViewBag.Title = "NavigationDemo";
	Layout = null;
}
@model BachelorsProjectWebApp.Models.NavigationModel

@Scripts.Render("~/bundles/jquery")

<div style="position: relative;">
	<canvas id="canvas1" style="position: absolute; left: 0; top: 0; z-index: -2;"></canvas>
	<canvas id="canvas2" style="position: absolute; left: 0; top: 0; z-index: -1;"></canvas>
</div>
<div style="display: none">
	<button style="height:50px;width:50px" onclick="up()">Up</button>
	<button style="height:50px;width:50px" onclick="down()">Down</button>
	<button style="height:50px;width:50px" onclick="showAndroidToast('Hello Android!')">Toast</button>
	<button style="height:50px;width:50px" onclick="retrieveBestBeacon()">Retrieve</button>
	<button style="height:50px;width:50px" onclick="startScanning()">Start</button>
	<button style="height:50px;width:50px" onclick="stopScanning()">Stop</button>
</div>
<script>

    $(document).ready(function () {

        Android.startScanning();
    });

	window.onresize = function () { location.reload(); }

	var canvas1 = document.getElementById("canvas1");
	var ctx1 = canvas1.getContext("2d");
    var beaconID;
	canvas1.width = window.innerWidth - 17;
	canvas1.height = window.innerHeight - 17;

	console.log("canvas1 width: " + window.innerWidth)

	var Beacon_ids = ["1,1", "1,2", "1,3"];

	var background = new Image();
	background.src = "https://i.imgur.com/9wljlvL.png";
	var xOffset;
    var yOffset;


    var currentPosition = 1;

    var destination = @ViewBag.demo_id;

	console.log("1st offset: " + xOffset)
	background.onload = function () {
        drawVisuals(currentPosition, destination);
	}

	//Updates position every 5 seconds
    const updater = window.setInterval(function () {
        retrieveBestBeacon();
    }, 2000);
    //Use clearInterval(updater); to stop the interval again

	function startScanning() {
		Android.startScanning();
	}

	function stopScanning() {
		Android.stopScanning();
	}

	function retrieveBestBeacon() {
        beaconID = Android.retrieveBestBeacon();
		Android.showToast(beaconID);
		for (var i = 0; i < Beacon_ids.length; i++) {
				if (Beacon_ids[i] === beaconID) {
                    drawVisuals(i+1, destination);
				}
			}
	}

	function showAndroidToast(toast) {

		if (beaconID) {
			Android.showToast(beaconID);

			for (var i = 0; i < Beacon_ids.length; i++) {
				if (Beacon_ids[i] === beaconID) {
					drawVisuals(i + 1, destination);
				}
			}
		} else {
			var x = Android.showToast(toast);
			Android.showToast(x);


		}

	}


	function drawVisuals(currentPosition, destination) {
		var scale = background.width / background.height; 0
		console.log(scale);
		//ctx1.drawImage(background,0,0);
		var newWidth = canvas1.width;
		var newHeight = newWidth / scale;
		if (newHeight > canvas1.height) {
			newHeight = canvas1.height;
			newWidth = newHeight * scale;
		}
		xOffset = newWidth < canvas1.width ? ((canvas1.width - newWidth) / 2) : 0;
		yOffset = newHeight < canvas1.height ? ((canvas1.height - newHeight) / 2) : 0;

		ctx1.drawImage(background, xOffset, yOffset, newWidth, newHeight);

		drawCircles(xOffset + newWidth / 5, newHeight / 8, 4, newWidth / 25, currentPosition, destination);
	}

	function up() {
		console.log("up");
		currentPosition--;
		drawVisuals(currentPosition, destination);
	}

	function down() {
		console.log("down");
		currentPosition++;
		drawVisuals(currentPosition, destination);
	}

	function drawCircles(x, y, numberOfCircles, circleRadius, currentPosition, destination) {
		var canvas2 = document.getElementById("canvas2")
		var ctx2 = canvas2.getContext("2d");
		canvas2.width = window.innerWidth - 17;
		canvas2.height = window.innerHeight - 17;
		var i;

		for (i = 1; i < numberOfCircles; i++) {

			if (i == currentPosition) {
				ctx2.beginPath();
				ctx2.arc(x, i * y, circleRadius, 0, 2 * Math.PI);
				ctx2.fillStyle = "red";
				ctx2.fill();
				ctx2.stroke();
			} else if (i == destination) {
				ctx2.beginPath();
				ctx2.arc(x, i * y, circleRadius, 0, 2 * Math.PI);
				ctx2.fillStyle = "green";
				ctx2.fill();
				ctx2.stroke();
			} else if (currentPosition == destination) {
				ctx2.font = "30px Arial";
                ctx2.fillText("You have reached your destination", 10, 50);
				clearInterval(updater);
				stopScanning();
			} else {
				ctx2.beginPath();
				ctx2.arc(x, i * y, circleRadius, 0, 2 * Math.PI);
				ctx2.stroke();
			}
		}

	}

</script>